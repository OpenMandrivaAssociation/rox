--- rox-filer-2.7/ROX-Filer/src/minibuffer.c.shell	2007-11-30 19:33:15.000000000 +0100
+++ rox-filer-2.7/ROX-Filer/src/minibuffer.c	2007-12-01 13:45:19.000000000 +0100
@@ -67,6 +67,8 @@ static const gchar *mini_contents(FilerW
 static void show_help(FilerWindow *filer_window);
 static gboolean grab_focus(GtkWidget *minibuffer);
 static gboolean select_if_glob(ViewIter *iter, gpointer data);
+static void select_return_pressed(FilerWindow *filer_window, guint etime,
+				  int hide, int history);
 
 /****************************************************************
  *			EXTERNAL INTERFACE			*
@@ -167,25 +169,7 @@ void minibuffer_show(FilerWindow *filer_
 			break;
 		case MINI_SHELL:
 		{
-			DirItem *item;
-			view_get_cursor(filer_window->view, &cursor);
-			item = cursor.peek(&cursor);
-			pos = 0;
-			if (view_count_selected(filer_window->view) > 0)
-				gtk_entry_set_text(mini, " \"$@\"");
-			else if (item)
-			{
-				guchar *escaped;
-				guchar *tmp;
-
-				escaped = shell_escape(item->leafname);
-				tmp = g_strconcat(" ", escaped, NULL);
-				g_free(escaped);
-				gtk_entry_set_text(mini, tmp);
-				g_free(tmp);
-			}
-			else
-				gtk_entry_set_text(mini, "");
+			gtk_entry_set_text(mini, "");
 			filer_window->mini_cursor_base = -1;	/* History */
 			break;
 		}
@@ -790,8 +774,13 @@ static void run_child(gpointer unused)
 	close_on_exec(STDOUT_FILENO, FALSE);
 }
 
+static gboolean invert_cb(ViewIter *iter, gpointer data)
+{
+	return !view_get_selected((ViewIface *) data, iter);
+}
+
 /* Either execute the command or make it the default run action */
-static void shell_return_pressed(FilerWindow *filer_window)
+static void shell_return_pressed(FilerWindow *filer_window, GdkEventKey	*event)
 {
 	GPtrArray	*argv;
 	const gchar	*entry;
@@ -799,7 +788,12 @@ static void shell_return_pressed(FilerWi
 	pid_t		child;
 	DirItem		*item;
 	ViewIter	iter;
+	GtkEntry	*mini;
+
+	g_return_if_fail(filer_window != NULL);
+	g_return_if_fail(filer_window->minibuffer != NULL);
 
+	mini = GTK_ENTRY(filer_window->minibuffer);
 	entry = mini_contents(filer_window);
 
 	if (!entry)
@@ -807,6 +801,63 @@ static void shell_return_pressed(FilerWi
 
 	add_to_history(entry);
 
+	if (strncmp("sel ", entry, 4)  == 0) {
+		GtkEditable 	*edit = GTK_EDITABLE(filer_window->minibuffer);
+
+		gtk_editable_delete_text(edit, 0, 4);
+
+		if (*entry == '\0' || strcmp(entry, "clear") == 0) {
+			g_return_if_fail(window_with_focus != NULL);
+
+			window_with_focus->temp_item_selected = FALSE;
+			view_clear_selection(window_with_focus->view);
+		} else if (strcmp(entry, "all") == 0) {
+			g_return_if_fail(window_with_focus != NULL);
+			
+			window_with_focus->temp_item_selected = FALSE;
+			view_select_all(window_with_focus->view);
+		} else if (strcmp(entry, "clear") == 0) {
+			g_return_if_fail(window_with_focus != NULL);
+
+			window_with_focus->temp_item_selected = FALSE;
+			view_clear_selection(window_with_focus->view);
+		} else if (strcmp(entry, "invert") == 0) {
+			g_return_if_fail(window_with_focus != NULL);
+
+			window_with_focus->temp_item_selected = FALSE;
+
+			view_select_if(window_with_focus->view, invert_cb,
+				       window_with_focus->view);
+		} else {
+			select_return_pressed(filer_window, event->time, 0, 0);
+		}
+	} else
+	if (strcmp("close", entry) == 0 || strcmp("exit", entry) == 0) {
+		g_return_if_fail(window_with_focus != NULL);
+		
+		if (!filer_window_delete(window_with_focus->window, NULL,
+					 window_with_focus))
+			gtk_widget_destroy(window_with_focus->window);
+	} else
+	if (strcmp("cd", entry) == 0) {
+		g_return_if_fail(window_with_focus != NULL);
+		
+		filer_change_to(window_with_focus, home_dir, NULL);
+	} else
+	if (strncmp("cd ", entry, 3) == 0) {
+		GtkEditable 	*edit = GTK_EDITABLE(filer_window->minibuffer);
+
+		gtk_editable_delete_text(edit, 0, 3);
+		if (entry[0] != '/') {
+			int pos = 0;
+			
+			gtk_editable_insert_text(edit, "/", strlen("/"), &pos);
+			pos = 0;
+			gtk_editable_insert_text(edit, filer_window->sym_path, strlen(filer_window->sym_path), &pos);
+		}
+		path_changed(filer_window);
+	} else
+	{
 	argv = g_ptr_array_new();
 	g_ptr_array_add(argv, "sh");
 	g_ptr_array_add(argv, "-c");
@@ -837,10 +888,32 @@ static void shell_return_pressed(FilerWi
 	else
 		on_child_death(child, (CallbackFn) shell_done, filer_window);
 
-	g_ptr_array_free(argv, TRUE);
+	g_ptr_array_free(argv, TRUE);	
+	}
 
 out:
-	minibuffer_hide(filer_window);
+	gtk_entry_set_text(mini, "");
+}
+
+static void shell_insert(FilerWindow *filer_window)
+{
+	GtkEditable 	*edit = GTK_EDITABLE(filer_window->minibuffer);
+	GtkEntry 	*entry = GTK_ENTRY(edit);
+	int		pos;
+	guchar		*esc = "\"$@\"";
+
+	g_return_if_fail(filer_window->mini_type == MINI_SHELL);
+
+	gtk_editable_delete_selection(edit);
+	pos = gtk_editable_get_position(edit);
+
+	if (pos > 0 && gtk_entry_get_text(entry)[pos - 1] != ' ')
+		gtk_editable_insert_text(edit, " ", 1, &pos);
+
+	gtk_editable_insert_text(edit, esc, strlen(esc), &pos);
+	gtk_editable_set_position(edit, pos);
+
+	g_free(esc);
 }
 
 /* Move through the shell history */
@@ -890,7 +963,7 @@ static gboolean select_if_test(ViewIter 
 			find_test_condition(data->cond, &data->info);
 }
 
-static void select_return_pressed(FilerWindow *filer_window, guint etime)
+static void select_return_pressed(FilerWindow *filer_window, guint etime, int hide, int history)
 {
 	const gchar	*entry;
 	SelectData	data;
@@ -900,7 +973,8 @@ static void select_return_pressed(FilerW
 	if (!entry)
 		goto out;
 
-	add_to_history(entry);
+	if (history)
+		add_to_history(entry);
 
 	data.cond = find_compile(entry);
 	if (!data.cond)
@@ -917,7 +991,8 @@ static void select_return_pressed(FilerW
 
 	find_condition_free(data.cond);
 out:
-	minibuffer_hide(filer_window);
+	if (hide)
+		minibuffer_hide(filer_window);
 }
 
 static void filter_return_pressed(FilerWindow *filer_window, guint etime)
@@ -995,7 +1070,10 @@ static gint key_press_event(GtkWidget	*w
 					break;
 				case GDK_Return:
 				case GDK_KP_Enter:
-					shell_return_pressed(filer_window);
+					shell_return_pressed(filer_window, event);
+					break;
+				case GDK_Insert:
+					shell_insert(filer_window);
 					break;
 				default:
 					return FALSE;
@@ -1015,7 +1093,7 @@ static gint key_press_event(GtkWidget	*w
 				case GDK_Return:
 				case GDK_KP_Enter:
 					select_return_pressed(filer_window,
-								event->time);
+								event->time, 1, 1);
 					break;
 				default:
 					return FALSE;
